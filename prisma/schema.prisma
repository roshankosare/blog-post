// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  username    String
  password    String
  userProfile UserProfile?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
}

model UserProfile {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  neme      String?
  blogs     Blog[]
}

model Blog {
  id             String       @id @default(uuid())
  auther         UserProfile  @relation(fields: [autherId], references: [id], onDelete: Cascade)
  autherId       String
  title          String
  markdownString String       @db.Text
  markdownHTML   String       @db.Text
  coverImage     String
  likes          Int          @default(0)
  dislikes       Int          @default(0)
  tags           String[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  published      Boolean      @default(false)
  readTime       Int          @default(0)
  images         BlogImages[]
}

model BlogImages {
  id     String @id @default(uuid())
  url    String
  blog   Blog   @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId String
}
